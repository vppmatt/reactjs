{"ast":null,"code":"var _jsxFileName = \"C:\\\\gitrepositories\\\\neueda\\\\reactjs\\\\End of section workspaces\\\\16 - context\\\\payments-ui\\\\src\\\\components\\\\FindTransactionPage\\\\Transactions\\\\Transactions.js\",\n  _s = $RefreshSig$();\nimport './Transactions.css';\nimport { useState, useEffect } from 'react';\nimport { getAllPaymentsForCountry, getAllPaymentsForOrderId, getCountries } from '../../../data/DataFunctions';\nimport TransactionTableRow from \"./TransactionTableRow\";\nimport { useHistory, useParams, useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transactions = props => {\n  _s();\n  const [payments, setPayments] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [countryOptions, setCountryOptions] = useState([]);\n  const [uniqueCountries, setUniqueCountries] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [selectedOrder, setSelectedOrder] = useState(\"\");\n  const history = useHistory();\n  const loadCountries = () => {\n    getCountries().then(response => {\n      const allCountries = response.data.country;\n      setUniqueCountries(allCountries);\n      setCountryOptions(allCountries.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: c,\n        children: c\n      }, c, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 57\n      }, this)));\n    }).catch(error => {\n      console.log(\"something went wrong\", error);\n    });\n  };\n  const loadTransactionsForSelectedCountry = () => {\n    getAllPaymentsForCountry(selectedCountry).then(response => {\n      setLoading(false);\n      setPayments(response.data);\n    }).catch(error => {\n      console.log(\"something went wrong\", error);\n    });\n  };\n  const params = useParams();\n  const desiredOrder = params.orderId != null ? params.orderId : props.searchTerm;\n  if (desiredOrder !== selectedOrder) {\n    setSelectedOrder(desiredOrder);\n  }\n  const urlCountry = new URLSearchParams(useLocation().search).get(\"country\");\n  if (urlCountry !== selectedCountry) {\n    setLoading(true);\n    setSelectedCountry(urlCountry);\n  }\n  const loadTransactionsForSelectedOrder = () => {\n    setCountryOptions([]);\n    setPayments([]);\n    getAllPaymentsForOrderId(selectedOrder).then(response => {\n      setLoading(false);\n      setPayments(response.data);\n    }).catch(error => {\n      console.log(\"something went wrong\", error);\n    });\n  };\n  if (loading && selectedOrder === \"\") {\n    loadTransactionsForSelectedCountry();\n  }\n  useEffect(() => {\n    if (selectedOrder > 0) {\n      setPayments([]);\n      setLoading(true);\n      loadTransactionsForSelectedOrder();\n    } else {\n      setPayments([]);\n      loadCountries();\n    }\n  }, [selectedOrder]);\n  const changeCountry = e => {\n    const option = e.target.options.selectedIndex - 1;\n    setLoading(true);\n    setSelectedCountry(uniqueCountries[option]);\n    history.push(`/find?country=${uniqueCountries[option]}`);\n  };\n  const countrySelector = /*#__PURE__*/_jsxDEV(\"select\", {\n    id: \"countrySelector\",\n    onChange: changeCountry,\n    defaultValue: \"xxx\",\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"xxx\",\n      disabled: true,\n      children: \"--select--\"\n    }, \"xxx\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), countryOptions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 29\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [countryOptions.length === 0 && selectedOrder === \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loadingMessage\",\n      children: \"The data is loading please wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 69\n    }, this), countryOptions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transactionsCountrySelector\",\n      children: [\"Select country: \", countrySelector]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 43\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loadingMessage\",\n      children: \"The data is loading please wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }, this), !loading && payments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"transactionsTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Order Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: payments.map(payment => TransactionTableRow(payment))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(Transactions, \"okI43nL34buwhWtWj+0jG+oe2Kc=\", false, function () {\n  return [useHistory, useParams, useLocation];\n});\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useState","useEffect","getAllPaymentsForCountry","getAllPaymentsForOrderId","getCountries","TransactionTableRow","useHistory","useParams","useLocation","jsxDEV","_jsxDEV","Transactions","props","_s","payments","setPayments","loading","setLoading","countryOptions","setCountryOptions","uniqueCountries","setUniqueCountries","selectedCountry","setSelectedCountry","selectedOrder","setSelectedOrder","history","loadCountries","then","response","allCountries","data","country","map","c","value","children","fileName","_jsxFileName","lineNumber","columnNumber","catch","error","console","log","loadTransactionsForSelectedCountry","params","desiredOrder","orderId","searchTerm","urlCountry","URLSearchParams","search","get","loadTransactionsForSelectedOrder","changeCountry","e","option","target","options","selectedIndex","push","countrySelector","id","onChange","defaultValue","disabled","length","className","payment","_c","$RefreshReg$"],"sources":["C:/gitrepositories/neueda/reactjs/End of section workspaces/16 - context/payments-ui/src/components/FindTransactionPage/Transactions/Transactions.js"],"sourcesContent":["import './Transactions.css';\nimport {useState, useEffect} from 'react';\nimport {getAllPaymentsForCountry, getAllPaymentsForOrderId, getCountries} from '../../../data/DataFunctions';\nimport TransactionTableRow from \"./TransactionTableRow\";\nimport {useHistory, useParams, useLocation} from 'react-router-dom';\n\nconst Transactions = (props) => {\n\n    const [payments, setPayments] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const [countryOptions, setCountryOptions] = useState([]);\n    const [uniqueCountries, setUniqueCountries] = useState([]);\n    const [selectedCountry, setSelectedCountry] = useState(null);\n\n    const [selectedOrder, setSelectedOrder] = useState(\"\");\n\n    const history = useHistory();\n\n\n\n    const loadCountries = () =>  {\n        getCountries()\n            .then(response => {\n                const allCountries = response.data.country;\n                setUniqueCountries(allCountries);\n                setCountryOptions(allCountries.map(c => <option key={c} value={c}>{c}</option>));\n            })\n            .catch(error => {\n                console.log(\"something went wrong\", error);\n            });\n    }\n\n    const loadTransactionsForSelectedCountry = () => {\n        getAllPaymentsForCountry(selectedCountry)\n            .then(response => {\n                setLoading(false);\n                setPayments(response.data);\n            })\n            .catch(error => {\n                console.log(\"something went wrong\", error);\n            });\n    };\n\n    const params = useParams();\n    const desiredOrder = params.orderId != null ? params.orderId : props.searchTerm;\n    if (desiredOrder !== selectedOrder) {\n        setSelectedOrder(desiredOrder);\n    }\n\n    const urlCountry = new URLSearchParams(useLocation().search).get(\"country\");\n    if (urlCountry !== selectedCountry) {\n        setLoading(true);\n        setSelectedCountry(urlCountry);\n    }\n\n    const loadTransactionsForSelectedOrder = () => {\n        setCountryOptions([]);\n        setPayments([]);\n\n         getAllPaymentsForOrderId(selectedOrder)\n            .then(response => {\n                setLoading(false);\n                setPayments(response.data);\n            })\n            .catch(error => {\n                console.log(\"something went wrong\", error);\n            });\n    };\n\n    if(loading && selectedOrder === \"\") {\n        loadTransactionsForSelectedCountry();\n    }\n\n    useEffect(() => {\n\n        if (selectedOrder > 0 ) {\n            setPayments([]);\n            setLoading(true);\n            loadTransactionsForSelectedOrder();\n        }else {\n            setPayments([]);\n            loadCountries();\n        }\n    }, [selectedOrder]);\n\n    const changeCountry = (e) => {\n        const option = e.target.options.selectedIndex - 1;\n        setLoading(true);\n        setSelectedCountry(uniqueCountries[option]);\n        history.push(`/find?country=${uniqueCountries[option]}`);\n    }\n\n    const countrySelector = <select id=\"countrySelector\" onChange={changeCountry} defaultValue=\"xxx\">\n        <option key=\"xxx\" value=\"xxx\" disabled={true} >--select--</option>\n        {countryOptions}\n    </select>;\n\n    return (\n        <div>\n            {countryOptions.length === 0 && selectedOrder === \"\" && <p className=\"loadingMessage\">The data is loading please wait...</p>}\n\n            {countryOptions.length > 0 && <div className=\"transactionsCountrySelector\">\n                Select country: {countrySelector}\n                    </div>\n            }\n\n            {loading && <p className=\"loadingMessage\">The data is loading please wait...</p>}\n\n            {!loading && payments.length > 0 &&\n                <div>\n\n                    <table className=\"transactionsTable\">\n                        <thead>\n                        <tr>\n                            <th>Id</th>\n                            <th>Order Id</th>\n                            <th>Date</th>\n                            <th>Country</th>\n                            <th>Currency</th>\n                            <th>Amount</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {payments.map(payment => TransactionTableRow(payment))}\n                        </tbody>\n                    </table>\n                </div>\n            }\n        </div>\n    )\n        ;\n}\n\nexport default Transactions\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}